<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="author" content="Kodinger">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Forgot Password</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <link rel="stylesheet" type="text/css" href="css/my-login.css">
</head>
<body class="my-login-page">
    <section class="h-100">
        <div class="container h-100">
            <div class="row justify-content-md-center align-items-center h-100">
                <div class="card-wrapper">
                    <div class="mb-5">
                        <img src="img/logo.png" alt="bootstrap 4 login page" class="mx-auto d-block">
                    </div>
                    <div class="card fat">
                        <div class="card-body">
                            <h4 class="card-title text-center">Forgot Password</h4>
                            <% if (typeof msg !== 'undefined' && msg.length > 0) { %>
                                <div class="alert alert-info"><%= msg %></div>
                            <% } %>
                            <form id="forgot-password-form" method="POST" class="my-login-validation" action="newpassword">
                                <div class="form-group">
                                    <label for="newPassword">New Password</label>
                                    <input id="newPassword" type="password" class="form-control" name="newPassword" required>
                                    <div class="invalid-feedback" id="newPasswordError"></div>
                                </div>
                                <div class="form-group">
                                    <label for="confirmPassword">Confirm Password</label>
                                    <input id="confirmPassword" type="password" class="form-control" name="confirmPassword" required>
                                    <div class="invalid-feedback" id="confirmPasswordError"></div>
                                    <input type="hidden" id="emailAddress" name="email" value="<%= locals.email %>">
                                </div>
                                <div class="form-text text-muted">
                                    Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, and one number or special character.
                                </div>
                                <div class="form-group m-0">
                                    <button type="submit" class="btn btn-primary btn-block">
                                        Confirm
                                    </button>
                                </div>
                            </form>
                            <div id="passwordCriteria" class="mt-2"></div>
                            <div class="alert alert-success" id="userSuccessMessage" style="display: none;"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const form = document.getElementById('forgot-password-form');
            const newPasswordInput = document.getElementById('newPassword');
            const confirmPasswordInput = document.getElementById('confirmPassword');
            const newPasswordError = document.getElementById('newPasswordError');
            const confirmPasswordError = document.getElementById('confirmPasswordError');
            const passwordCriteria = document.getElementById('passwordCriteria');
            const successMessage = document.getElementById('userSuccessMessage');
            
            // Function to validate password criteria
            function validatePassword(password) {
                const length = password.length >= 8;
                const upperCase = /[A-Z]/.test(password);
                const lowerCase = /[a-z]/.test(password);
                const numberOrSpecialChar = /[0-9!@#$%^&*]/.test(password);
                
                return { length, upperCase, lowerCase, numberOrSpecialChar };
            }

            form.addEventListener('submit', function (event) {
                const newPasswordValue = newPasswordInput.value;
                const confirmPasswordValue = confirmPasswordInput.value;
                const passwordValidation = validatePassword(newPasswordValue);

                // Reset previous error messages
                newPasswordError.textContent = '';
                confirmPasswordError.textContent = '';
                passwordCriteria.innerHTML = '';

                // Check if passwords match
                if (newPasswordValue !== confirmPasswordValue) {
                    confirmPasswordError.textContent = 'Passwords do not match';
                    confirmPasswordInput.classList.add('is-invalid');
                    event.preventDefault();
                }

                // Check password validation criteria and display errors
                const criteriaList = document.createElement('ul');
                criteriaList.classList.add('list-unstyled');
                for (const [key, value] of Object.entries(passwordValidation)) {
                    const listItem = document.createElement('li');
                    listItem.style.color = value ? 'green' : 'red';
                    listItem.textContent = `Password must ${value ? '' : 'not '}contain ${key}`;
                    criteriaList.appendChild(listItem);
                }
                passwordCriteria.appendChild(criteriaList);

                // Prevent form submission if validation fails
                if (!form.checkValidity() || newPasswordValue !== confirmPasswordValue) {
                    event.preventDefault();
                    event.stopPropagation();
                }

                // Display success message if all conditions are met
                if (form.checkValidity() && newPasswordValue === confirmPasswordValue) {
                    successMessage.style.display = 'block';

                    // Hide success message after 2 seconds
                    setTimeout(function() {
                        successMessage.style.display = 'none';
                    }, 2000);
                }

                // Add 'was-validated' class to form
                form.classList.add('was-validated');
            });

        });
    </script>
</body>
</html>
